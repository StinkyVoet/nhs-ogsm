@page "/GroupOverview"
@using nhs_ogsm.Data
@using nhs_ogsm.Services
@inject GroupService GroupService;
@inject NavigationManager NavigationManager;
@inject StrategyService StrategyService;

@*alles wat met personen te maken heeft werken nu met strings ipv de goede class*@
@code
{
    public bool Creating;
    public List<Group> _groups;
    public List<String> _people = new() { "Henrik", "Kees", "Marco", "Geert", "Frank" };

    //get Groups on load
    protected override async Task OnInitializedAsync()
    {
        _groups = GroupService.GetAllGroups();
    }
}

<PageTitle>Group overview</PageTitle>

<style>
    .dashboardButton {
        border: 2px solid #04AA6D;
        padding: 24px 32px;
        text-align: center;
        font-size: 24px;
        border-radius: 8px;   
        box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 16px 0 rgba(0,0,0,0.19);
        float: right;
        transition-duration: 0.4s;
        position: sticky;
        bottom: 10px;
    }
    
    .dashboardButton:hover {
        background-color: #04AA6D;
          color: white;
    }
</style>

<div>
    <h3>Group Overview</h3>
    <div style="height: 20px"></div>
    <table class="table" style="table-layout:fixed">
        <thead>
        <tr>
            <th>Name</th>
            <th>Assigned OGSM's</th>
            <th></th>
            <th></th>
        </tr>
        </thead>
        <tbody>

        @if (_groups != null)
        {
            @foreach (var group in _groups)
            {
                <tr>
                    <td>@group.Name</td>
                    <td>@group.Ogsms</td>
                    <td><input type="button" value="Select" onclick="@(() => Redirect("DashBoard/" + group.ID))" class="btn btn-default"/></td>
                </tr>
            }
        }
        @if (Creating)
        {
            <tr>
                <td><label>Name</label></td>
                <td><label>OGSM</label></td>
                <td><input class="input" type="text" @oninput="@(() => { FilterResults(); SearchQuery = })" placeholder="Find Person...">
                @foreach (string person in results)
                    {
                        <Button Type="button">@person</Button>
                        Console.WriteLine("Updated Results");
                    }
                </td>
                    
                
                    
                <td><Button Type="button" OnClick="@DoneCreating">Create</Button>
                    <Button Type="button" OnClick="@DoneCreating">Cancel</Button></td>
            </tr>
        }
        </tbody>
    </table>

    <button type="button" class="dashboardButton" onclick="@(() => StartCreating())">+</button>
</div>
@code
{
    public string SearchQuery = "";
    private List<string> results = new();
    
    public void Redirect(string uri)
    {
        NavigationManager.NavigateTo(uri);
    }

    public void StartCreating()
    {
        Creating = true;
    }

    public void DoneCreating()
    {
        Creating = false;
    }

    private void FilterResults()
    {
        Console.WriteLine("Searching");
        
        results = new List<string>();
        foreach (string person in _people.Where(p => p.StartsWith(SearchQuery)))
        {
            results.Add(person);
        }

        Console.WriteLine("Searched for:");
        Console.WriteLine(SearchQuery);
    }
}
