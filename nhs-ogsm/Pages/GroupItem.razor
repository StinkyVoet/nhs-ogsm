@page "/GroupItem"
@using nhs_ogsm.Data
@using nhs_ogsm.Services
@using Microsoft.AspNetCore.Http.Extensions
@inject GroupService GroupService;
@inject UserService UserService;
@inject StateContainerService StateService;
@inject NavigationManager NavigationManager;

@code
{
    public List<Group> _groups;
    public List<User> _users;
    private bool isEdit = false;
    
    //Save new OGSM item
    Group _group = new();
    public void HandleSubmit(EditContext editContext)
    {
        var newGroup = (Group)editContext.Model;
        if (isEdit)
        {
            GroupService.UpdateGroup(_group);
        }
        else
        {
            GroupService.AddGroup(newGroup);
        }
        _group = new Group();
        _groups = GroupService.GetAllGroups();
        StateService.NotifyStateChanged();
        StateHasChanged();
    }
    
    public void HandleDelete(Group item)
    {
        GroupService.DeleteGroup(item.ID);
        _groups.Remove(item);
        StateService.NotifyStateChanged();
        StateHasChanged();
    }

    public void EditForm(Group item)
    {
        isEdit = true;
        pageTitle = "Editing: "+ item.Name;
        _group = item;
        StateService.NotifyStateChanged();
        StateHasChanged();
    }
    
    protected override async Task OnInitializedAsync()
    {
        _groups = GroupService.GetAllGroups();
        _users = UserService.GetAllUsers();
    }
    
}

<h3>@pageTitle</h3>

<EditForm Model="@_group" OnValidSubmit="HandleSubmit">
    <label for="GroupInput">Name</label>
    <InputText id="GroupInput" class="input" @bind-Value="@_group.Name" required></InputText>
    <Button Type="ButtonType.Submit" Color="ButtonColor.Primary" onclick="@(() => Redirect("Groups/"))">Save</Button>
    <Button Color="ButtonColor.Secondary" onclick="@(() => Redirect("Groups/"))">Cancel</Button>
</EditForm>

@code
{
    public string pageTitle = "New group item";
    
    public void Redirect(string uri)
    {
        NavigationManager.NavigateTo(uri);
    }
}


